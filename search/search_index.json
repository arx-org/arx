{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ArxLang Arx is multi-purpose compiler that aims to provide arrow datatypes as native datatypes. For now, it is strongly based on the Kaleidoscope compiler with a just few changes. Arx Enhancement Proposals Any change to the language (syntax) should be done using a Enhancement Proposal via https://github.com/arxlang/arx-design repository.","title":"Home"},{"location":"#arxlang","text":"Arx is multi-purpose compiler that aims to provide arrow datatypes as native datatypes. For now, it is strongly based on the Kaleidoscope compiler with a just few changes.","title":"ArxLang"},{"location":"#arx-enhancement-proposals","text":"Any change to the language (syntax) should be done using a Enhancement Proposal via https://github.com/arxlang/arx-design repository.","title":"Arx Enhancement Proposals"},{"location":"coc/","text":"Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at arxcompiler@gmail.com. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Code of Conduct"},{"location":"coc/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"coc/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"coc/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"coc/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"coc/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"coc/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at arxcompiler@gmail.com. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"coc/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"coc/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"coc/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"coc/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"coc/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community.","title":"4. Permanent Ban"},{"location":"coc/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Attribution"},{"location":"discord/","text":"window.location.href = \"https://discord.gg/CjSr6GNgp7\";","title":"Discord"},{"location":"getting-started/","text":"Getting Started Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways: Types of Contributions Report Bugs Report bugs at https://github.com/arxlang/arx/issues. If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug. Fix Bugs Look through the GitHub issues for bugs. Anything tagged with \u201cbug\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it. Implement Features Look through the GitHub issues for features. Anything tagged with \u201cenhancement\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it. Write Documentation arx could always use more documentation, whether as part of the official arx docs, in docstrings, or even on the web in blog posts, articles, and such. Submit Feedback The best way to send feedback is to file an issue at https://github.com/arxlang/arx/issues. If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :) Get Started! Ready to contribute? Here\u2019s how to set up arx for local development. Fork the arx repo on GitHub. Clone your fork locally: $ git clone git@github.com:your_name_here/arx.git Prepare your local development environment: $ mamba env create --file /conda/dev.yaml $ conda activate arx $ pre-commit install Create a branch for local development: $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you\u2019re done making changes, check the compilation and the tests: $ make build-with-tests $ make run-tests $ pre-commit run --all-files Commit your changes and push your branch to GitHub: $ git add . $ git commit -m \u201cYour detailed description of your changes.\u201d $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website. Pull Request Guidelines Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md. Release This project uses semantic-release in order to cut a new release based on the commit-message. Commit message format semantic-release uses the commit messages to determine the consumer impact of changes in the codebase. Following formalized conventions for commit messages, semantic-release automatically determines the next semantic version number, generates a changelog and publishes the release. By default, semantic-release uses Angular Commit Message Conventions . The commit message format can be changed with the preset or config options_ of the @semantic-release/commit-analyzer and @semantic-release/release-notes-generator plugins. Tools such as commitizen or commitlint can be used to help contributors and enforce valid commit messages. The table below shows which commit message gets you which release type when semantic-release runs (using the default configuration): Commit message Release type fix(pencil): stop graphite breaking when pressure is applied Fix Release feat(pencil): add 'graphiteWidth' option Feature Release perf(pencil): remove graphiteWidth option Chore BREAKING CHANGE: The graphiteWidth option has been removed Breaking Release source: https://github.com/semantic-release/semantic-release/blob/master/README.md#commit-message-format As this project uses the squash and merge strategy, ensure to apply the commit message format to the PR's title.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways:","title":"Getting Started"},{"location":"getting-started/#types-of-contributions","text":"","title":"Types of Contributions"},{"location":"getting-started/#report-bugs","text":"Report bugs at https://github.com/arxlang/arx/issues. If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug.","title":"Report Bugs"},{"location":"getting-started/#fix-bugs","text":"Look through the GitHub issues for bugs. Anything tagged with \u201cbug\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it.","title":"Fix Bugs"},{"location":"getting-started/#implement-features","text":"Look through the GitHub issues for features. Anything tagged with \u201cenhancement\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it.","title":"Implement Features"},{"location":"getting-started/#write-documentation","text":"arx could always use more documentation, whether as part of the official arx docs, in docstrings, or even on the web in blog posts, articles, and such.","title":"Write Documentation"},{"location":"getting-started/#submit-feedback","text":"The best way to send feedback is to file an issue at https://github.com/arxlang/arx/issues. If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :)","title":"Submit Feedback"},{"location":"getting-started/#get-started","text":"Ready to contribute? Here\u2019s how to set up arx for local development. Fork the arx repo on GitHub. Clone your fork locally: $ git clone git@github.com:your_name_here/arx.git Prepare your local development environment: $ mamba env create --file /conda/dev.yaml $ conda activate arx $ pre-commit install Create a branch for local development: $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you\u2019re done making changes, check the compilation and the tests: $ make build-with-tests $ make run-tests $ pre-commit run --all-files Commit your changes and push your branch to GitHub: $ git add . $ git commit -m \u201cYour detailed description of your changes.\u201d $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website.","title":"Get Started!"},{"location":"getting-started/#pull-request-guidelines","text":"Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md.","title":"Pull Request Guidelines"},{"location":"getting-started/#release","text":"This project uses semantic-release in order to cut a new release based on the commit-message.","title":"Release"},{"location":"getting-started/#commit-message-format","text":"semantic-release uses the commit messages to determine the consumer impact of changes in the codebase. Following formalized conventions for commit messages, semantic-release automatically determines the next semantic version number, generates a changelog and publishes the release. By default, semantic-release uses Angular Commit Message Conventions . The commit message format can be changed with the preset or config options_ of the @semantic-release/commit-analyzer and @semantic-release/release-notes-generator plugins. Tools such as commitizen or commitlint can be used to help contributors and enforce valid commit messages. The table below shows which commit message gets you which release type when semantic-release runs (using the default configuration): Commit message Release type fix(pencil): stop graphite breaking when pressure is applied Fix Release feat(pencil): add 'graphiteWidth' option Feature Release perf(pencil): remove graphiteWidth option Chore BREAKING CHANGE: The graphiteWidth option has been removed Breaking Release source: https://github.com/semantic-release/semantic-release/blob/master/README.md#commit-message-format As this project uses the squash and merge strategy, ensure to apply the commit message format to the PR's title.","title":"Commit message format"},{"location":"governance/","text":"Governance The objectives of this document include formalizing the governance of the ArxLang (Arx) project. In both common and uncommon situations, outlining the decision-making procedure and the interactions between the various members of our community, including the relationship between work that may be supported by for-profit or nonprofit organizations and open source collaborative development. Summary Arx is a community-owned and community-run project. To the maximum extent possible, decisions about project direction are made by community consensus (but note that \"consensus\" here has a somewhat technical meaning that might not match everyone's expectations -- see below). Some members of the community additionally contribute by serving on the Arx, where they are responsible for facilitating the establishment of community consensus, for stewarding project resources, and -- in extreme cases -- for making project decisions if the normal community-based process breaks down. The project ArxLang (Arx) community aims to create an open source compiler with a syntax that inherits elements from Python, C++, YAML, etc. An important aspect to Arx is that it aims to have Apache Arrow datatypes as native types. The Project is conducted by a distributed team of contributors, who are individuals that have collaborated with code, documentation, graphical design or other kind of work to the Project. Anyone can be a Contributor. Contributors can be affiliated with any legal entity or none. Contributors participate in the project by submitting, reviewing and discussing GitHub pull requests and issues and participating in open and public Project discussions on GitHub, discord, among other channels. The basis of project participation is openness and transparency. The Project Community consists of all Contributors and Users of the Project. Contributors work on behalf of and are responsible to the larger Project Community and we strive to keep the barrier between Contributors and Users as low as possible. In order to improve transparency and a better fiscal workflow, Arx is currently looking for a fiscal sponsor to help our project to grow. Governance This section describes the governance and leadership model of The Project. The principles of Project governance are: Openness & Transparency Active Contribution Institutional Neutrality Diversity, Equity and Inclusion Education Consensus-based decision making by the community In general, all project decisions will be made by consensus of all interested Contributors. The primary goal of this approach is to ensure that the people who are most affected by and involved in any given change can contribute their knowledge in the confidence that their voices will be heard, because thoughtful review from a broad community is the best mechanism we know of for creating high-quality software. The mechanism we use to accomplish this goal may be unfamiliar for those who are not experienced with the cultural norms around free/open-source software development. We provide a summary here, and highly recommend that all Contributors additionally read Chapter 4: Social and Political Infrastructure of Karl Fogel's classic Producing Open Source Software, and in particular the section on Consensus-based Democracy, for a more detailed discussion. In this context, consensus does NOT require: that we wait to solicit everybody's opinion on every change, that we ever hold a vote on anything, or that everybody is happy or agrees with every decision. For us, what consensus means is that we entrust everyone with the right to veto any change if they feel it necessary. While this may sound like a recipe for obstruction and pain, this is not what happens. Instead, we find that most people take this responsibility seriously, and only invoke their veto when they judge that a serious problem is being ignored, and that their veto is necessary to protect the project. And in practice, it turns out that such vetoes are almost never formally invoked, because their mere possibility ensures that Contributors are motivated from the start to find some solution that everyone can live with -- thus accomplishing our goal of ensuring that all interested perspectives are taken into account. How do we know when consensus has been achieved? First of all, this is rather difficult since consensus is defined by the absence of vetoes, which requires us to somehow prove a negative. In practice, we use a combination of our best judgement (e.g., a simple and uncontroversial bug fix posted on GitHub and reviewed by a core developer is probably fine) and best efforts (e.g., all substantive API changes must be posted to a github issue or a discussion on discord in order to give the broader community a chance to catch any problems and suggest improvements; we assume that anyone who cares enough about Arx to invoke their veto right should be on the github Arx repositories or discord). Arx, is a small group, and aims for quick and transparent communication, so the common channels for communication are the github issues and the discord channels. So, all people involved can have a quick and transparent communication about any specific problem and we can react very quick. If one does need to invoke a formal veto, then the process should consist of: an unambiguous statement that a veto is being invoked, an explanation of why it is being invoked, and a description of what conditions (if any) would convince the vetoer to withdraw their veto. If all proposals for resolving some issue are vetoed, then the status quo wins by default. In the worst case, if a Contributor is genuinely misusing their veto obstructively to the detriment of the project, then they can be ejected from the project by consensus of the Steering Council -- see below. Steering Council The Project will have a Steering Council that consists of Project Contributors who have produced contributions that are substantial in quality and quantity, and sustained over at least one year. The overall role of the Council is to ensure, with input from the Community, the long-term well-being of the project, both technically and as a community. During the everyday project activities, council members participate in all discussions, code review and other project activities as peers with all other Contributors and the Community. In these everyday activities, Council Members do not have any special power or privilege through their membership on the Council. However, it is expected that because of the quality and quantity of their contributions and their expert knowledge of the Project Software and Services that Council Members will provide useful guidance, both technical and in terms of project direction, to potentially less experienced contributors. The Steering Council and its Members play a special role in certain situations. In particular, the Council may, if necessary: Make decisions about the overall scope, vision and direction of the project. Make decisions about strategic collaborations with other organizations or individuals. Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. Make decisions about the Services that are run by The Project and manage those Services for the benefit of the Project and Community. Update policy documents such as this one. Make decisions when regular community discussion doesn\u2019t produce consensus on an issue in a reasonable time frame. However, the Council's primary responsibility is to facilitate the ordinary community-based decision making procedure described above. If we ever have to step in and formally override the community for the health of the Project, then we will do so, but we will consider reaching this point to indicate a failure in our leadership. Council decision making If it becomes necessary for the Steering Council to produce a formal decision, then they will use a form of the Apache Foundation voting process. This is a formalized version of consensus, in which +1 votes indicate agreement, -1 votes are vetoes (and must be accompanied with a rationale, as above), and one can also vote fractionally (e.g. -0.5, +0.5) if one wishes to express an opinion without registering a full veto. These numeric votes are also often used informally as a way of getting a general sense of people's feelings on some issue, and should not normally be taken as formal votes. A formal vote only occurs if explicitly declared, and if this does occur then the vote should be held open for long enough to give all interested Council Members a chance to respond -- at least one week. In practice, we anticipate that for most Steering Council decisions (e.g., voting in new members) a more informal process will suffice. Council membership A list of current Steering Council Members is maintained at the page About. To become eligible to join the Steering Council, an individual must be a Project Contributor who has produced contributions that are substantial in quality and quantity, and sustained over at least six month. Potential Council Members are nominated by existing Council members, and become members following consensus of the existing Council members, and confirmation that the potential Member is interested and willing to serve in that capacity. The Council will be initially formed from the set of existing Core Developers who, as of late 2015, have been significantly active over the last year. When considering potential Members, the Council will look at candidates with a comprehensive view of their contributions. This will include but is not limited to code, code review, infrastructure work, mailing list and chat participation, community help/building, education and outreach, design work, etc. We are deliberately not setting arbitrary quantitative metrics (like \u201c100 commits in this repo\u201d) to avoid encouraging behavior that plays to the metrics rather than the project\u2019s overall well-being. We want to encourage a diverse array of backgrounds, viewpoints and talents in our team, which is why we explicitly do not define code as the sole metric on which council membership will be evaluated. If a Council member becomes inactive in the project for a period of six month, they will be considered for removal from the Council. Before removal, inactive Member will be approached to see if they plan on returning to active participation. If not they will be removed immediately upon a Council vote. If they plan on returning to active participation soon, they will be given a grace period of one month. If they don\u2019t return to active participation within that time period they will be removed by vote of the Council without further grace period. All former Council members can be considered for membership again at any time in the future, like any other Project Contributor. Retired Council members will be listed on the project website, acknowledging the period during which they were active in the Council. The Council reserves the right to eject current Members, if they are deemed to be actively harmful to the project\u2019s well-being, and attempts at communication and conflict resolution have failed. This requires the consensus of the remaining Members. Conflict of interest It is expected that the Council Members will be employed at a wide range of companies, universities and non-profit organizations. Because of this, it is possible that Members will have conflict of interests, such ones include, but are not limited to: Financial interests, such as investments, employment or contracting work, outside of The Project that may influence their work on The Project. Access to proprietary information of their employer that could potentially leak into their work with the Project. All members of the Council shall disclose to the rest of the Council any conflict of interest they may have. Members with a conflict of interest in a particular issue may participate in Council discussions on that issue, but must recuse themselves from voting on the issue. Private communications of the Council To the maximum extent possible, Council discussions and activities will be public and done in collaboration and discussion with the Project Contributors and Community. The Council will have a private channel on discord that will be used sparingly and only when a specific matter requires privacy. When private communications and decisions are needed, the Council will do its best to summarize those to the Community after eliding personal/private/sensitive information that should not be posted to the public internet. Subcommittees The Council can create subcommittees that provide leadership and guidance for specific aspects of the project. Like the Council as a whole, subcommittees should conduct their business in an open and public manner unless privacy is specifically called for. Private subcommittee communications should happen on the main private discord channel of the Council unless specifically called for. Institutional Partners and Funding The Steering Council are the primary leadership for the project. No outside institution, individual or legal entity has the ability to own, control, usurp or influence the project other than by participating in the Project as Contributors and Council Members. However, because institutions can be an important funding mechanism for the project, it is important to formally acknowledge institutional participation in the project. These are Institutional Partners. An Institutional Contributor is any individual Project Contributor who contributes to the project as part of their official duties at an Institutional Partner. Likewise, an Institutional Council Member is any Project Steering Council Member who contributes to the project as part of their official duties at an Institutional Partner. Institutions become eligible to become an Institutional Partner when they share same values of ArxLang and are available to collaborate to the project in any of these ways: publicizing ArxLang in their social network allocate one or more contributors to help ArxLang projects funding ArxLang general activities If at some point an existing Institutional Partner doesn't accomplish with these points mentioned above, then six month grace period begins. If at the end of this six months period they continue not to have any contribution, then their Institutional Partnership will lapse, and resuming it will require going through the normal process for new Partnerships. Funding acquired by Institutional Partners to work on The Project is called Institutional Funding. However, no funding obtained by an Institutional Partner can override the Steering Council. If a Partner has funding to do Open Science work and the Council decides to not pursue that work as a project, the Partner is free to pursue it on their own. However in this situation, that part of the Partner\u2019s work will not be under the ArxLang umbrella and cannot use the Project trademarks in a way that suggests a formal relationship. Institutional Partner benefits are: Acknowledgement on the ArxLang websites and in talks. Ability to influence the project through the participation of their Council Member. Council Members invited to ArxLang Developer Meetings. A list of current Institutional Partners is maintained at the page About Us. Document history https://github.com/arxlang/arx Acknowledgements Substantial portions of this document were adapted from the Open Science Labs project governance and decision-making document https://github.com/OpenScienceLabs/opensciencelabs.github.io/blob/main/pages/governance.md. Additionally, the Open Science Labs project governance is based on the Numpy project governance file: https://github.com/numpy/numpy/commits/main/doc/source/dev/governance/governance.rst. License CC BY-SA 4.0: https://creativecommons.org/licenses/by-sa/4.0/","title":"Governance"},{"location":"governance/#governance","text":"The objectives of this document include formalizing the governance of the ArxLang (Arx) project. In both common and uncommon situations, outlining the decision-making procedure and the interactions between the various members of our community, including the relationship between work that may be supported by for-profit or nonprofit organizations and open source collaborative development.","title":"Governance"},{"location":"governance/#summary","text":"Arx is a community-owned and community-run project. To the maximum extent possible, decisions about project direction are made by community consensus (but note that \"consensus\" here has a somewhat technical meaning that might not match everyone's expectations -- see below). Some members of the community additionally contribute by serving on the Arx, where they are responsible for facilitating the establishment of community consensus, for stewarding project resources, and -- in extreme cases -- for making project decisions if the normal community-based process breaks down.","title":"Summary"},{"location":"governance/#the-project","text":"ArxLang (Arx) community aims to create an open source compiler with a syntax that inherits elements from Python, C++, YAML, etc. An important aspect to Arx is that it aims to have Apache Arrow datatypes as native types. The Project is conducted by a distributed team of contributors, who are individuals that have collaborated with code, documentation, graphical design or other kind of work to the Project. Anyone can be a Contributor. Contributors can be affiliated with any legal entity or none. Contributors participate in the project by submitting, reviewing and discussing GitHub pull requests and issues and participating in open and public Project discussions on GitHub, discord, among other channels. The basis of project participation is openness and transparency. The Project Community consists of all Contributors and Users of the Project. Contributors work on behalf of and are responsible to the larger Project Community and we strive to keep the barrier between Contributors and Users as low as possible. In order to improve transparency and a better fiscal workflow, Arx is currently looking for a fiscal sponsor to help our project to grow.","title":"The project"},{"location":"governance/#governance_1","text":"This section describes the governance and leadership model of The Project. The principles of Project governance are: Openness & Transparency Active Contribution Institutional Neutrality Diversity, Equity and Inclusion Education","title":"Governance"},{"location":"governance/#consensus-based-decision-making-by-the-community","text":"In general, all project decisions will be made by consensus of all interested Contributors. The primary goal of this approach is to ensure that the people who are most affected by and involved in any given change can contribute their knowledge in the confidence that their voices will be heard, because thoughtful review from a broad community is the best mechanism we know of for creating high-quality software. The mechanism we use to accomplish this goal may be unfamiliar for those who are not experienced with the cultural norms around free/open-source software development. We provide a summary here, and highly recommend that all Contributors additionally read Chapter 4: Social and Political Infrastructure of Karl Fogel's classic Producing Open Source Software, and in particular the section on Consensus-based Democracy, for a more detailed discussion. In this context, consensus does NOT require: that we wait to solicit everybody's opinion on every change, that we ever hold a vote on anything, or that everybody is happy or agrees with every decision. For us, what consensus means is that we entrust everyone with the right to veto any change if they feel it necessary. While this may sound like a recipe for obstruction and pain, this is not what happens. Instead, we find that most people take this responsibility seriously, and only invoke their veto when they judge that a serious problem is being ignored, and that their veto is necessary to protect the project. And in practice, it turns out that such vetoes are almost never formally invoked, because their mere possibility ensures that Contributors are motivated from the start to find some solution that everyone can live with -- thus accomplishing our goal of ensuring that all interested perspectives are taken into account. How do we know when consensus has been achieved? First of all, this is rather difficult since consensus is defined by the absence of vetoes, which requires us to somehow prove a negative. In practice, we use a combination of our best judgement (e.g., a simple and uncontroversial bug fix posted on GitHub and reviewed by a core developer is probably fine) and best efforts (e.g., all substantive API changes must be posted to a github issue or a discussion on discord in order to give the broader community a chance to catch any problems and suggest improvements; we assume that anyone who cares enough about Arx to invoke their veto right should be on the github Arx repositories or discord). Arx, is a small group, and aims for quick and transparent communication, so the common channels for communication are the github issues and the discord channels. So, all people involved can have a quick and transparent communication about any specific problem and we can react very quick. If one does need to invoke a formal veto, then the process should consist of: an unambiguous statement that a veto is being invoked, an explanation of why it is being invoked, and a description of what conditions (if any) would convince the vetoer to withdraw their veto. If all proposals for resolving some issue are vetoed, then the status quo wins by default. In the worst case, if a Contributor is genuinely misusing their veto obstructively to the detriment of the project, then they can be ejected from the project by consensus of the Steering Council -- see below.","title":"Consensus-based decision making by the community"},{"location":"governance/#steering-council","text":"The Project will have a Steering Council that consists of Project Contributors who have produced contributions that are substantial in quality and quantity, and sustained over at least one year. The overall role of the Council is to ensure, with input from the Community, the long-term well-being of the project, both technically and as a community. During the everyday project activities, council members participate in all discussions, code review and other project activities as peers with all other Contributors and the Community. In these everyday activities, Council Members do not have any special power or privilege through their membership on the Council. However, it is expected that because of the quality and quantity of their contributions and their expert knowledge of the Project Software and Services that Council Members will provide useful guidance, both technical and in terms of project direction, to potentially less experienced contributors. The Steering Council and its Members play a special role in certain situations. In particular, the Council may, if necessary: Make decisions about the overall scope, vision and direction of the project. Make decisions about strategic collaborations with other organizations or individuals. Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. Make decisions about the Services that are run by The Project and manage those Services for the benefit of the Project and Community. Update policy documents such as this one. Make decisions when regular community discussion doesn\u2019t produce consensus on an issue in a reasonable time frame. However, the Council's primary responsibility is to facilitate the ordinary community-based decision making procedure described above. If we ever have to step in and formally override the community for the health of the Project, then we will do so, but we will consider reaching this point to indicate a failure in our leadership.","title":"Steering Council"},{"location":"governance/#council-decision-making","text":"If it becomes necessary for the Steering Council to produce a formal decision, then they will use a form of the Apache Foundation voting process. This is a formalized version of consensus, in which +1 votes indicate agreement, -1 votes are vetoes (and must be accompanied with a rationale, as above), and one can also vote fractionally (e.g. -0.5, +0.5) if one wishes to express an opinion without registering a full veto. These numeric votes are also often used informally as a way of getting a general sense of people's feelings on some issue, and should not normally be taken as formal votes. A formal vote only occurs if explicitly declared, and if this does occur then the vote should be held open for long enough to give all interested Council Members a chance to respond -- at least one week. In practice, we anticipate that for most Steering Council decisions (e.g., voting in new members) a more informal process will suffice.","title":"Council decision making"},{"location":"governance/#council-membership","text":"A list of current Steering Council Members is maintained at the page About. To become eligible to join the Steering Council, an individual must be a Project Contributor who has produced contributions that are substantial in quality and quantity, and sustained over at least six month. Potential Council Members are nominated by existing Council members, and become members following consensus of the existing Council members, and confirmation that the potential Member is interested and willing to serve in that capacity. The Council will be initially formed from the set of existing Core Developers who, as of late 2015, have been significantly active over the last year. When considering potential Members, the Council will look at candidates with a comprehensive view of their contributions. This will include but is not limited to code, code review, infrastructure work, mailing list and chat participation, community help/building, education and outreach, design work, etc. We are deliberately not setting arbitrary quantitative metrics (like \u201c100 commits in this repo\u201d) to avoid encouraging behavior that plays to the metrics rather than the project\u2019s overall well-being. We want to encourage a diverse array of backgrounds, viewpoints and talents in our team, which is why we explicitly do not define code as the sole metric on which council membership will be evaluated. If a Council member becomes inactive in the project for a period of six month, they will be considered for removal from the Council. Before removal, inactive Member will be approached to see if they plan on returning to active participation. If not they will be removed immediately upon a Council vote. If they plan on returning to active participation soon, they will be given a grace period of one month. If they don\u2019t return to active participation within that time period they will be removed by vote of the Council without further grace period. All former Council members can be considered for membership again at any time in the future, like any other Project Contributor. Retired Council members will be listed on the project website, acknowledging the period during which they were active in the Council. The Council reserves the right to eject current Members, if they are deemed to be actively harmful to the project\u2019s well-being, and attempts at communication and conflict resolution have failed. This requires the consensus of the remaining Members.","title":"Council membership"},{"location":"governance/#conflict-of-interest","text":"It is expected that the Council Members will be employed at a wide range of companies, universities and non-profit organizations. Because of this, it is possible that Members will have conflict of interests, such ones include, but are not limited to: Financial interests, such as investments, employment or contracting work, outside of The Project that may influence their work on The Project. Access to proprietary information of their employer that could potentially leak into their work with the Project. All members of the Council shall disclose to the rest of the Council any conflict of interest they may have. Members with a conflict of interest in a particular issue may participate in Council discussions on that issue, but must recuse themselves from voting on the issue.","title":"Conflict of interest"},{"location":"governance/#private-communications-of-the-council","text":"To the maximum extent possible, Council discussions and activities will be public and done in collaboration and discussion with the Project Contributors and Community. The Council will have a private channel on discord that will be used sparingly and only when a specific matter requires privacy. When private communications and decisions are needed, the Council will do its best to summarize those to the Community after eliding personal/private/sensitive information that should not be posted to the public internet.","title":"Private communications of the Council"},{"location":"governance/#subcommittees","text":"The Council can create subcommittees that provide leadership and guidance for specific aspects of the project. Like the Council as a whole, subcommittees should conduct their business in an open and public manner unless privacy is specifically called for. Private subcommittee communications should happen on the main private discord channel of the Council unless specifically called for.","title":"Subcommittees"},{"location":"governance/#institutional-partners-and-funding","text":"The Steering Council are the primary leadership for the project. No outside institution, individual or legal entity has the ability to own, control, usurp or influence the project other than by participating in the Project as Contributors and Council Members. However, because institutions can be an important funding mechanism for the project, it is important to formally acknowledge institutional participation in the project. These are Institutional Partners. An Institutional Contributor is any individual Project Contributor who contributes to the project as part of their official duties at an Institutional Partner. Likewise, an Institutional Council Member is any Project Steering Council Member who contributes to the project as part of their official duties at an Institutional Partner. Institutions become eligible to become an Institutional Partner when they share same values of ArxLang and are available to collaborate to the project in any of these ways: publicizing ArxLang in their social network allocate one or more contributors to help ArxLang projects funding ArxLang general activities If at some point an existing Institutional Partner doesn't accomplish with these points mentioned above, then six month grace period begins. If at the end of this six months period they continue not to have any contribution, then their Institutional Partnership will lapse, and resuming it will require going through the normal process for new Partnerships. Funding acquired by Institutional Partners to work on The Project is called Institutional Funding. However, no funding obtained by an Institutional Partner can override the Steering Council. If a Partner has funding to do Open Science work and the Council decides to not pursue that work as a project, the Partner is free to pursue it on their own. However in this situation, that part of the Partner\u2019s work will not be under the ArxLang umbrella and cannot use the Project trademarks in a way that suggests a formal relationship. Institutional Partner benefits are: Acknowledgement on the ArxLang websites and in talks. Ability to influence the project through the participation of their Council Member. Council Members invited to ArxLang Developer Meetings. A list of current Institutional Partners is maintained at the page About Us.","title":"Institutional Partners and Funding"},{"location":"governance/#document-history","text":"https://github.com/arxlang/arx","title":"Document history"},{"location":"governance/#acknowledgements","text":"Substantial portions of this document were adapted from the Open Science Labs project governance and decision-making document https://github.com/OpenScienceLabs/opensciencelabs.github.io/blob/main/pages/governance.md. Additionally, the Open Science Labs project governance is based on the Numpy project governance file: https://github.com/numpy/numpy/commits/main/doc/source/dev/governance/governance.rst.","title":"Acknowledgements"},{"location":"governance/#license","text":"CC BY-SA 4.0: https://creativecommons.org/licenses/by-sa/4.0/","title":"License"},{"location":"partners/","text":"Partners Open science labs is a community that aims to gather people from all parts of the world, specially from latin america countries and create an open space for teaching, learning and sharing topics around open science and computational tools. An english group is very important in this context because it increases the possibilities of collaboration in open projects.","title":"Partners"},{"location":"partners/#partners","text":"Open science labs is a community that aims to gather people from all parts of the world, specially from latin america countries and create an open space for teaching, learning and sharing topics around open science and computational tools. An english group is very important in this context because it increases the possibilities of collaboration in open projects.","title":"Partners"},{"location":"roadmap/","text":"Roadmap The roadmap document define the direction that the project is taking. The initial and decisive part of the project is the implementation of the Apache Arrow datatypes as the native datatypes. Implement Apache Arrow datatypes ArxLang is based on Kaleidoscope compiler , so it just implements float data type for now. In order to accept more datatypes, the language should have a way to specify the type for each variable and function returning. wave 1: float32 wave 2: int8, int16, int32, int64 wave 3: float16, float64 wave 4: string wave 5: datetime","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"The roadmap document define the direction that the project is taking. The initial and decisive part of the project is the implementation of the Apache Arrow datatypes as the native datatypes.","title":"Roadmap"},{"location":"roadmap/#implement-apache-arrow-datatypes","text":"ArxLang is based on Kaleidoscope compiler , so it just implements float data type for now. In order to accept more datatypes, the language should have a way to specify the type for each variable and function returning. wave 1: float32 wave 2: int8, int16, int32, int64 wave 3: float16, float64 wave 4: string wave 5: datetime","title":"Implement Apache Arrow datatypes"},{"location":"sponsor/","text":"Sponsor","title":"Sponsor"},{"location":"sponsor/#sponsor","text":"","title":"Sponsor"},{"location":"doxygen-awesome-css/","text":"Doxygen Awesome ![Screenshot of Doxygen Awesome CSS](img/screenshot.png) Doxygen Awesome is a custom CSS theme for Doxygen HTML-documentation with lots of customization parameters. Motivation I really like how the Doxygen HTML-documentation is structured! But IMHO it looks a bit outdated. This theme is an attemt to update the visuals of Doxygen without changing it's overall layout too much. Features \ud83c\udf08 Clean, modern design \ud83d\ude80 Heavily customizable by adjusting CSS-variables \ud83e\udde9 No changes to the HTML structure of Doxygen required \ud83d\udcf1 Improved mobile usability \ud83c\udf18 Dark mode support! \ud83e\udd47 Works best with doxygen 1.9.1 - 1.9.3 Examples Sidebar-Only theme: Documentation of this repository Base theme: libsl3 Installation Copy the file doxygen-awesome.css from this repository into your project or add this repository as submodule and check out the latest release: git submodule add https://github.com/jothepro/doxygen-awesome-css.git cd doxygen-awesome-css git checkout v2.0.3 Choose one of the theme variants and configure Doxygen accordingly: Base theme : # Doxyfile GENERATE_TREEVIEW = YES # optional. Also works without treeview HTML_EXTRA_STYLESHEET = doxygen-awesome-css/doxygen-awesome.css Sidebar-only theme : # Doxyfile GENERATE_TREEVIEW = YES # required! HTML_EXTRA_STYLESHEET = doxygen-awesome-css/doxygen-awesome.css \\ doxygen-awesome-css/doxygen-awesome-sidebar-only.css Further installation instructions: How to install extensions How to customize the theme (colors, spacing, border-radius, ...) Tips and Tricks for further configuration Browser support Tested with Chrome 98, Chrome 98 for Android, Chrome 87 for iOS Safari 15, Safari for iOS 15 Firefox 97, Firefox Daylight 97 for Android, Firefox Daylight 96 for iOS Credits This theme is inspired by the vuepress static site generator default theme. Thank you for all the feedback on github! Read Next: Extensions","title":"Doxygen Awesome"},{"location":"doxygen-awesome-css/#doxygen-awesome","text":"![Screenshot of Doxygen Awesome CSS](img/screenshot.png) Doxygen Awesome is a custom CSS theme for Doxygen HTML-documentation with lots of customization parameters.","title":"Doxygen Awesome"},{"location":"doxygen-awesome-css/#motivation","text":"I really like how the Doxygen HTML-documentation is structured! But IMHO it looks a bit outdated. This theme is an attemt to update the visuals of Doxygen without changing it's overall layout too much.","title":"Motivation"},{"location":"doxygen-awesome-css/#features","text":"\ud83c\udf08 Clean, modern design \ud83d\ude80 Heavily customizable by adjusting CSS-variables \ud83e\udde9 No changes to the HTML structure of Doxygen required \ud83d\udcf1 Improved mobile usability \ud83c\udf18 Dark mode support! \ud83e\udd47 Works best with doxygen 1.9.1 - 1.9.3","title":"Features"},{"location":"doxygen-awesome-css/#examples","text":"Sidebar-Only theme: Documentation of this repository Base theme: libsl3","title":"Examples"},{"location":"doxygen-awesome-css/#installation","text":"Copy the file doxygen-awesome.css from this repository into your project or add this repository as submodule and check out the latest release: git submodule add https://github.com/jothepro/doxygen-awesome-css.git cd doxygen-awesome-css git checkout v2.0.3 Choose one of the theme variants and configure Doxygen accordingly: Base theme : # Doxyfile GENERATE_TREEVIEW = YES # optional. Also works without treeview HTML_EXTRA_STYLESHEET = doxygen-awesome-css/doxygen-awesome.css Sidebar-only theme : # Doxyfile GENERATE_TREEVIEW = YES # required! HTML_EXTRA_STYLESHEET = doxygen-awesome-css/doxygen-awesome.css \\ doxygen-awesome-css/doxygen-awesome-sidebar-only.css Further installation instructions: How to install extensions How to customize the theme (colors, spacing, border-radius, ...) Tips and Tricks for further configuration","title":"Installation"},{"location":"doxygen-awesome-css/#browser-support","text":"Tested with Chrome 98, Chrome 98 for Android, Chrome 87 for iOS Safari 15, Safari for iOS 15 Firefox 97, Firefox Daylight 97 for Android, Firefox Daylight 96 for iOS","title":"Browser support"},{"location":"doxygen-awesome-css/#credits","text":"This theme is inspired by the vuepress static site generator default theme. Thank you for all the feedback on github! Read Next: Extensions","title":"Credits"},{"location":"doxygen-awesome-css/docs/customization/","text":"Customization Customization CSS-Variables Setup Available variables Doxygen generator Share your customizations CSS-Variables This theme is highly customizable because a lot of things are parameterized with CSS variables. Just to give you an idea on how flexible the styling is, click this button: Alter theme Setup It is recommended to add your own custom.css and overwrite the variables there: HTML_EXTRA_STYLESHEET = doxygen-awesome.css custom.css Make sure to override the variables in the correct spot. All variables should be customized where they have been defined, in the html tag selector: html { /* override light-mode variables here */ } For dark-mode overrides you have to choose where to put them, depending on wether the dark-mode toggle extension is installed or not: dark-mode toggle is installed: css html.dark-mode { /* define dark-mode variable overrides here if you DO use doxygen-awesome-darkmode-toggle.js */ } dark-mode toggle is NOT installed. The dark-mode is enabled automatically depending on the system preference: css @media (prefers-color-scheme: dark) { html:not(.light-mode) { /* define dark-mode variable overrides here if you DON'T use doxygen-awesome-darkmode-toggle.js */ } } Available variables The following list gives an overview of the variables defined in doxygen-awesome.css . The list is not complete. To explore all available variables, have a look at the CSS starting from here . All variables are defined at the beginning of the stylesheet. Parameter Default (Light) Default (Dark) Color Scheme : primary theme colors. This will affect the entire websites color scheme: links, arrows, labels, ... --primary-color #1779c4 #1982d2 --primary-dark-color #335c80 #5ca8e2 --primary-light-color #70b1e9 #4779ac Page Colors : background and foreground (text-color) of the documentation. --page-background-color white #1C1D1F --page-foreground-color #2f4153 #d2dbde --page-secondary-foreground-color #637485 #859399 Spacing: default spacings. Most ui components reference these values for spacing, to provide uniform spacing on the page. --spacing-small 5px --spacing-medium 10px --spacing-large 16px Border Radius : border radius for all rounded ui components. Will affect many components, like dropdowns, memitems, codeblocks, ... --border-radius-small 4px --border-radius-medium 6px --border-radius-large 8px Content Width : The content is centered and constrained in its width. To make the content fill the whole page, set the following variable to auto . --content-maxwidth 1000px Code Fragment Colors : Color-Scheme of multiline codeblocks --fragment-background #F8F9FA #282c34 --fragment-foreground #37474F #dbe4eb Arrow Opacity : By default the arrows in the sidebar are only visible on hover. You can override this behaviour so they are visible all the time. --side-nav-arrow-opacity 0 --side-nav-arrow-hover-opacity 0.9 ...and many more If you miss a configuration option or find a bug, please consider opening an issue ! Doxygen generator The theme overrides most colors with the --primary-color-* variables. But there is a few small images and graphics that the theme cannot adjust or replace. To make these blend in better with the rest, it is recommended to adjust the doxygen color settings to something that matches the chosen color-scheme. For the default color-scheme, these values work out quite well: # Doxyfile HTML_COLORSTYLE_HUE = 209 HTML_COLORSTYLE_SAT = 255 HTML_COLORSTYLE_GAMMA = 113 Share your customizations If you customized the theme with custom colors, spacings, font-sizes, etc. and you want to share your creation with others, you can to this here . I am always curious to learn about how you made the theme look even better! Read Next: Tips & Tricks","title":"Customization"},{"location":"doxygen-awesome-css/docs/customization/#customization","text":"Customization CSS-Variables Setup Available variables Doxygen generator Share your customizations","title":"Customization"},{"location":"doxygen-awesome-css/docs/customization/#css-variables","text":"This theme is highly customizable because a lot of things are parameterized with CSS variables. Just to give you an idea on how flexible the styling is, click this button: Alter theme","title":"CSS-Variables"},{"location":"doxygen-awesome-css/docs/customization/#setup","text":"It is recommended to add your own custom.css and overwrite the variables there: HTML_EXTRA_STYLESHEET = doxygen-awesome.css custom.css Make sure to override the variables in the correct spot. All variables should be customized where they have been defined, in the html tag selector: html { /* override light-mode variables here */ } For dark-mode overrides you have to choose where to put them, depending on wether the dark-mode toggle extension is installed or not: dark-mode toggle is installed: css html.dark-mode { /* define dark-mode variable overrides here if you DO use doxygen-awesome-darkmode-toggle.js */ } dark-mode toggle is NOT installed. The dark-mode is enabled automatically depending on the system preference: css @media (prefers-color-scheme: dark) { html:not(.light-mode) { /* define dark-mode variable overrides here if you DON'T use doxygen-awesome-darkmode-toggle.js */ } }","title":"Setup"},{"location":"doxygen-awesome-css/docs/customization/#available-variables","text":"The following list gives an overview of the variables defined in doxygen-awesome.css . The list is not complete. To explore all available variables, have a look at the CSS starting from here . All variables are defined at the beginning of the stylesheet. Parameter Default (Light) Default (Dark) Color Scheme : primary theme colors. This will affect the entire websites color scheme: links, arrows, labels, ... --primary-color #1779c4 #1982d2 --primary-dark-color #335c80 #5ca8e2 --primary-light-color #70b1e9 #4779ac Page Colors : background and foreground (text-color) of the documentation. --page-background-color white #1C1D1F --page-foreground-color #2f4153 #d2dbde --page-secondary-foreground-color #637485 #859399 Spacing: default spacings. Most ui components reference these values for spacing, to provide uniform spacing on the page. --spacing-small 5px --spacing-medium 10px --spacing-large 16px Border Radius : border radius for all rounded ui components. Will affect many components, like dropdowns, memitems, codeblocks, ... --border-radius-small 4px --border-radius-medium 6px --border-radius-large 8px Content Width : The content is centered and constrained in its width. To make the content fill the whole page, set the following variable to auto . --content-maxwidth 1000px Code Fragment Colors : Color-Scheme of multiline codeblocks --fragment-background #F8F9FA #282c34 --fragment-foreground #37474F #dbe4eb Arrow Opacity : By default the arrows in the sidebar are only visible on hover. You can override this behaviour so they are visible all the time. --side-nav-arrow-opacity 0 --side-nav-arrow-hover-opacity 0.9 ...and many more If you miss a configuration option or find a bug, please consider opening an issue !","title":"Available variables"},{"location":"doxygen-awesome-css/docs/customization/#doxygen-generator","text":"The theme overrides most colors with the --primary-color-* variables. But there is a few small images and graphics that the theme cannot adjust or replace. To make these blend in better with the rest, it is recommended to adjust the doxygen color settings to something that matches the chosen color-scheme. For the default color-scheme, these values work out quite well: # Doxyfile HTML_COLORSTYLE_HUE = 209 HTML_COLORSTYLE_SAT = 255 HTML_COLORSTYLE_GAMMA = 113","title":"Doxygen generator"},{"location":"doxygen-awesome-css/docs/customization/#share-your-customizations","text":"If you customized the theme with custom colors, spacings, font-sizes, etc. and you want to share your creation with others, you can to this here . I am always curious to learn about how you made the theme look even better! Read Next: Tips & Tricks","title":"Share your customizations"},{"location":"doxygen-awesome-css/docs/extensions/","text":"Extensions Extensions Dark Mode Toggle Installation Fragment Copy Button Installation Paragraph Linking Installation On top of the base theme provided by doxygen-awesome.css , this repository comes with Javascript extensions that require additional setup steps to get them running. The extensions require customizations in the header HTML-template. This is how you can create the default template with Doxygen: Create default header template: sh doxygen -w html header.html delete_me.html delete_me.css Reference the template in your Doxyfile : HTML_HEADER = header.html More details on header customization Dark Mode Toggle Adds a button next to the search bar to enable and disable the dark theme variant manually. Installation Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-darkmode-toggle.js HTML_EXTRA_STYLESHEET: doxygen-awesome-sidebar-only-darkmode-toggle.css (ONLY required for the sidebar-only theme variant!) In the header.html template, include doxygen-awesome-darkmode-toggle.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-darkmode-toggle.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeDarkModeToggle.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeDarkModeToggle.title = \"Zwischen hellem/dunklem Modus wechseln\" Change Icons. Both Emoji or SVG icons are supported: js DoxygenAwesomeDarkModeToggle.lightModeIcon = '\ud83c\udf1e' // icon from https://fonts.google.com/icons DoxygenAwesomeDarkModeToggle.darkModeIcon = `<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#009793\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M8.1,14.15C9.77,14.63,11,16.17,11,18c0,0.68-0.19,1.31-0.48,1.87c0.48,0.09,0.97,0.14,1.48,0.14 c1.48,0,2.9-0.41,4.13-1.15c-2.62-0.92-5.23-2.82-6.8-5.86C7.74,9.94,7.78,7.09,8.29,4.9c-2.57,1.33-4.3,4.01-4.3,7.1c0,0,0,0,0,0 c0.01,0,0.01,0,0.02,0C5.66,12,7.18,12.83,8.1,14.15z\" opacity=\".3\"/><path d=\"M19.78,17.51c-2.47,0-6.57-1.33-8.68-5.43C8.77,7.57,10.6,3.6,11.63,2.01C6.27,2.2,1.98,6.59,1.98,12 c0,0.14,0.02,0.28,0.02,0.42C2.61,12.16,3.28,12,3.98,12c0,0,0,0,0,0c0-3.09,1.73-5.77,4.3-7.1C7.78,7.09,7.74,9.94,9.32,13 c1.57,3.04,4.18,4.95,6.8,5.86c-1.23,0.74-2.65,1.15-4.13,1.15c-0.5,0-1-0.05-1.48-0.14c-0.37,0.7-0.94,1.27-1.64,1.64 c0.98,0.32,2.03,0.5,3.11,0.5c3.5,0,6.58-1.8,8.37-4.52C20.18,17.5,19.98,17.51,19.78,17.51z\"/><path d=\"M7,16l-0.18,0C6.4,14.84,5.3,14,4,14c-1.66,0-3,1.34-3,3s1.34,3,3,3c0.62,0,2.49,0,3,0c1.1,0,2-0.9,2-2 C9,16.9,8.1,16,7,16z\"/></g></g></svg>` All customizations must be applied before calling DoxygenAwesomeDarkModeToggle.init() ! Fragment Copy Button This feature is experimental! Shows a copy button when the user hovers over a code fragment: Installation Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-fragment-copy-button.js In the header.html template, include doxygen-awesome-fragment-copy-button.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-fragment-copy-button.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeFragmentCopyButton.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeFragmentCopyButton.title = \"In die Zwischenablage kopieren\" Change Icons: js DoxygenAwesomeFragmentCopyButton.copyIcon = `<svg ...>` DoxygenAwesomeFragmentCopyButton.successIcon = `<svg ...>` All customizations must be applied before calling DoxygenAwesomeDarkModeToggle.init() ! Paragraph Linking This feature is experimental! Provides a button on hover behind every headline to allow easy creation of a permanent link to the headline: Works for all headlines and for many documentation section titles. Installation Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-paragraph-link.js In the header.html template, include doxygen-awesome-paragraph-link.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-paragraph-link.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeParagraphLink.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeParagraphLink.title = \"Abschnitt verkn\u00fcpfen\" Change Icon. Both plain characters or SVG icons are supported: js DoxygenAwesomeParagraphLink.icon = \"\u00b6\" All customizations must be applied before calling DoxygenAwesomeParagraphLink.init() ! Read Next: Customization","title":"Extensions"},{"location":"doxygen-awesome-css/docs/extensions/#extensions","text":"Extensions Dark Mode Toggle Installation Fragment Copy Button Installation Paragraph Linking Installation On top of the base theme provided by doxygen-awesome.css , this repository comes with Javascript extensions that require additional setup steps to get them running. The extensions require customizations in the header HTML-template. This is how you can create the default template with Doxygen: Create default header template: sh doxygen -w html header.html delete_me.html delete_me.css Reference the template in your Doxyfile : HTML_HEADER = header.html More details on header customization","title":"Extensions"},{"location":"doxygen-awesome-css/docs/extensions/#dark-mode-toggle","text":"Adds a button next to the search bar to enable and disable the dark theme variant manually.","title":"Dark Mode Toggle"},{"location":"doxygen-awesome-css/docs/extensions/#installation","text":"Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-darkmode-toggle.js HTML_EXTRA_STYLESHEET: doxygen-awesome-sidebar-only-darkmode-toggle.css (ONLY required for the sidebar-only theme variant!) In the header.html template, include doxygen-awesome-darkmode-toggle.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-darkmode-toggle.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeDarkModeToggle.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeDarkModeToggle.title = \"Zwischen hellem/dunklem Modus wechseln\" Change Icons. Both Emoji or SVG icons are supported: js DoxygenAwesomeDarkModeToggle.lightModeIcon = '\ud83c\udf1e' // icon from https://fonts.google.com/icons DoxygenAwesomeDarkModeToggle.darkModeIcon = `<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#009793\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M8.1,14.15C9.77,14.63,11,16.17,11,18c0,0.68-0.19,1.31-0.48,1.87c0.48,0.09,0.97,0.14,1.48,0.14 c1.48,0,2.9-0.41,4.13-1.15c-2.62-0.92-5.23-2.82-6.8-5.86C7.74,9.94,7.78,7.09,8.29,4.9c-2.57,1.33-4.3,4.01-4.3,7.1c0,0,0,0,0,0 c0.01,0,0.01,0,0.02,0C5.66,12,7.18,12.83,8.1,14.15z\" opacity=\".3\"/><path d=\"M19.78,17.51c-2.47,0-6.57-1.33-8.68-5.43C8.77,7.57,10.6,3.6,11.63,2.01C6.27,2.2,1.98,6.59,1.98,12 c0,0.14,0.02,0.28,0.02,0.42C2.61,12.16,3.28,12,3.98,12c0,0,0,0,0,0c0-3.09,1.73-5.77,4.3-7.1C7.78,7.09,7.74,9.94,9.32,13 c1.57,3.04,4.18,4.95,6.8,5.86c-1.23,0.74-2.65,1.15-4.13,1.15c-0.5,0-1-0.05-1.48-0.14c-0.37,0.7-0.94,1.27-1.64,1.64 c0.98,0.32,2.03,0.5,3.11,0.5c3.5,0,6.58-1.8,8.37-4.52C20.18,17.5,19.98,17.51,19.78,17.51z\"/><path d=\"M7,16l-0.18,0C6.4,14.84,5.3,14,4,14c-1.66,0-3,1.34-3,3s1.34,3,3,3c0.62,0,2.49,0,3,0c1.1,0,2-0.9,2-2 C9,16.9,8.1,16,7,16z\"/></g></g></svg>` All customizations must be applied before calling DoxygenAwesomeDarkModeToggle.init() !","title":"Installation"},{"location":"doxygen-awesome-css/docs/extensions/#fragment-copy-button","text":"This feature is experimental! Shows a copy button when the user hovers over a code fragment:","title":"Fragment Copy Button"},{"location":"doxygen-awesome-css/docs/extensions/#installation_1","text":"Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-fragment-copy-button.js In the header.html template, include doxygen-awesome-fragment-copy-button.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-fragment-copy-button.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeFragmentCopyButton.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeFragmentCopyButton.title = \"In die Zwischenablage kopieren\" Change Icons: js DoxygenAwesomeFragmentCopyButton.copyIcon = `<svg ...>` DoxygenAwesomeFragmentCopyButton.successIcon = `<svg ...>` All customizations must be applied before calling DoxygenAwesomeDarkModeToggle.init() !","title":"Installation"},{"location":"doxygen-awesome-css/docs/extensions/#paragraph-linking","text":"This feature is experimental! Provides a button on hover behind every headline to allow easy creation of a permanent link to the headline: Works for all headlines and for many documentation section titles.","title":"Paragraph Linking"},{"location":"doxygen-awesome-css/docs/extensions/#installation_2","text":"Add the required resources in your Doxyfile : HTML_EXTRA_FILES: doxygen-awesome-paragraph-link.js In the header.html template, include doxygen-awesome-paragraph-link.js at the end of the <head> and then initialize it: html <html> <head> <!-- ... other metadata & script includes ... --> <script type=\"text/javascript\" src=\"$relpath^doxygen-awesome-paragraph-link.js\"></script> <script type=\"text/javascript\"> DoxygenAwesomeParagraphLink.init() </script> </head> <body> The button can be customized to some extend: Change the tooltip of the button: js DoxygenAwesomeParagraphLink.title = \"Abschnitt verkn\u00fcpfen\" Change Icon. Both plain characters or SVG icons are supported: js DoxygenAwesomeParagraphLink.icon = \"\u00b6\" All customizations must be applied before calling DoxygenAwesomeParagraphLink.init() ! Read Next: Customization","title":"Installation"},{"location":"doxygen-awesome-css/docs/tricks/","text":"Tips & Tricks Tips & Tricks Class Diagrams with Graphviz Disable Dark Mode Choosing Sidebar Width Class Diagrams with Graphviz To get the best looking class diagrams for your documentation, generate them with Graphviz as vector graphics with transparent background: # Doxyfile HAVE_DOT = YES DOT_IMAGE_FORMAT = svg DOT_TRANSPARENT = YES Disable Dark Mode If for some reason you don't want the theme to automatically switch to dark mode depending on the browser preference, you can disable dark mode by adding the light-mode class to the html-tag in the header template: <html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"light-mode\"> The same can be done to always enable dark-mode: <html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"dark-mode\"> This only works if you don't use the dark-mode toggle extension. Choosing Sidebar Width If you have enabled the sidebar-only theme variant, make sure to carefully choose a proper width for your sidebar. It should be wide enough to hold the icon, project title and version number. If the content is too wide, it will be cut off. html { /* Make sure sidebar is wide enough to contain the page title (logo + title + version) */ --side-nav-fixed-width: 335px; } The choosen width should also be set in the Doxyfile: # Doxyfile TREEVIEW_WIDTH = 335 Read Next: Example","title":"Tips & Tricks"},{"location":"doxygen-awesome-css/docs/tricks/#tips-tricks","text":"Tips & Tricks Class Diagrams with Graphviz Disable Dark Mode Choosing Sidebar Width","title":"Tips &amp; Tricks"},{"location":"doxygen-awesome-css/docs/tricks/#class-diagrams-with-graphviz","text":"To get the best looking class diagrams for your documentation, generate them with Graphviz as vector graphics with transparent background: # Doxyfile HAVE_DOT = YES DOT_IMAGE_FORMAT = svg DOT_TRANSPARENT = YES","title":"Class Diagrams with Graphviz"},{"location":"doxygen-awesome-css/docs/tricks/#disable-dark-mode","text":"If for some reason you don't want the theme to automatically switch to dark mode depending on the browser preference, you can disable dark mode by adding the light-mode class to the html-tag in the header template: <html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"light-mode\"> The same can be done to always enable dark-mode: <html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"dark-mode\"> This only works if you don't use the dark-mode toggle extension.","title":"Disable Dark Mode"},{"location":"doxygen-awesome-css/docs/tricks/#choosing-sidebar-width","text":"If you have enabled the sidebar-only theme variant, make sure to carefully choose a proper width for your sidebar. It should be wide enough to hold the icon, project title and version number. If the content is too wide, it will be cut off. html { /* Make sure sidebar is wide enough to contain the page title (logo + title + version) */ --side-nav-fixed-width: 335px; } The choosen width should also be set in the Doxyfile: # Doxyfile TREEVIEW_WIDTH = 335 Read Next: Example","title":"Choosing Sidebar Width"},{"location":"tutorials/","text":"Tutorials Tutorials would be available here soon!","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"Tutorials would be available here soon!","title":"Tutorials"}]}