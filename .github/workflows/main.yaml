# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  main:

    runs-on: ubuntu-latest

    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
        mamba-version: "*"
        channels: conda-forge,nodefaults
        channel-priority: true
        activate-environment: arx
        environment-file: conda/dev.yaml

    - name: build using cmake
      run: make cmake-build-with-tests

    - name: test flags
      run: |
        bin/arx --version

    - name: run sanity tests
      run: make test-sanity

    - name: test samples
      run: make test-samples

    - name: lint
      run: |
        pre-commit install
        pre-commit run --all-files

    - name: llvm-cov generation
      if: ${{ github.event_name == 'pull_request' }}
      id: llvm-cov-report
      run: |
        cd build
        ninja ccov
        export COVERAGE_REPORT_CSS=$(cat ccov/arx/style.css)
        export COVERAGE_REPORT_HTML=$(cat ccov/arx/index.html)
        echo "::set-output name=COVERAGE_REPORT_CSS::${COVERAGE_REPORT_CSS}"
        echo "::set-output name=COVERAGE_REPORT_HTML::${COVERAGE_REPORT_HTML}"

    - name: llvm-cov publishing
      uses: mshick/add-pr-comment@v1
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        message: |
          <h1>CODE COVERAGE</h1>
        repo-token-user-login: 'github-actions[bot]'

    # note: this step must be always executed after all tests and checks
    - name: Release
      if: ${{ github.event_name == 'push' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npx --yes \
          -p semantic-release \
          -p "@semantic-release/commit-analyzer" \
          -p "@semantic-release/release-notes-generator" \
          -p "@semantic-release/changelog" \
          -p "@semantic-release/exec" \
          -p "@semantic-release/github" \
          -p "@semantic-release/git" \
          -p "@google/semantic-release-replace-plugin" \
          semantic-release --ci
